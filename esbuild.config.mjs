import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

import { copy } from "esbuild-plugin-copy";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;
/** @type {import('esbuild').BuildOptions} */
const BASE_CONFIG = {
	banner: {
		js: banner,
	},
	entryPoints: ["./src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins,
	],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	treeShaking: true,
};

/** @type {import('esbuild').BuildOptions} */
const PROD_CONDIG = {
	watch: false,
	sourcemap: false,
	outfile: "main.js",
};

/** @type {import('esbuild').BuildOptions} */
const DEV_CONDIG = {
	watch: true,
	sourcemap: "inline",
	outfile: "./test-vault/.obsidian/plugins/obsidian-2hoplink/main.js",
	plugins: [
		copy({
			resolveFrom: "cwd",
			assets: {
				from: ["./assets/*"],
				to: ["./test-vault/.obsidian/plugins/obsidian-2hoplink"],
			},
		}),
	],
};

const prod = process.argv[2] === "production";

esbuild
	.build({
		...BASE_CONFIG,
		...(prod ? PROD_CONDIG : DEV_CONDIG),
	})
	.catch(() => process.exit(1));
